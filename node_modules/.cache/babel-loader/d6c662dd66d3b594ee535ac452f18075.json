{"ast":null,"code":"import _slicedToArray from \"/Users/naomikenyatta/abstracts-vis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/naomikenyatta/abstracts-vis/src/App.js\";\nimport './App.css';\nimport React, { useState } from 'react';\nimport Histogram from './components/histogram';\nimport Box from '@mui/material/Box';\nimport Slider from '@mui/material/Slider';\nimport Test from './components/test';\nimport DatatablePage from './components/table';\nimport Papa from \"papaparse\";\n\nfunction App() {\n  var _this = this;\n\n  // State to store parsed data\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      parsedData = _useState2[0],\n      setParsedData = _useState2[1]; //State to store table Column name\n\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tableRows = _useState4[0],\n      setTableRows = _useState4[1]; //State to store the values\n\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      values = _useState6[0],\n      setValues = _useState6[1];\n\n  var changeHandler = function changeHandler(event) {\n    // Passing file data (event.target.files[0]) to parse using Papa.parse\n    Papa.parse(event.target.files[0], {\n      header: true,\n      skipEmptyLines: true,\n      complete: function complete(results) {\n        var rowsArray = [];\n        var valuesArray = []; // Iterating data to get column name and their values\n\n        results.data.map(function (d) {\n          rowsArray.push(Object.keys(d));\n          valuesArray.push(Object.values(d));\n        }); // Parsed Data Response in array format\n\n        setParsedData(results.data); // Filtered Column Names\n\n        setTableRows(rowsArray[0]); // Filtered Values\n\n        setValues(valuesArray);\n      }\n    });\n  };\n\n  var _useState7 = useState(30),\n      _useState8 = _slicedToArray(_useState7, 2),\n      nBin = _useState8[0],\n      setnBin = _useState8[1];\n\n  var data = [{\n    name: 'Tiger Nixon',\n    position: 'System Architect',\n    office: 'Edinburgh',\n    age: '61'\n  }, {\n    name: 'Garrett Winters',\n    position: 'Accountant',\n    office: 'Tokyo',\n    age: '63'\n  }, {\n    name: 'Ashton Cox',\n    position: 'Junior Technical Author',\n    office: 'San Francisco',\n    age: '66'\n  }, {\n    name: 'Cedric Kelly',\n    position: 'Senior Javascript Developer',\n    office: 'Edinburgh',\n    age: '22'\n  }, {\n    name: 'Airi Satou',\n    position: 'Accountant',\n    office: 'Tokyo',\n    age: '33'\n  }, {\n    name: 'Brielle Williamson',\n    position: 'Integration Specialist',\n    office: 'New York',\n    age: '61'\n  }, {\n    name: 'Herrod Chandler',\n    position: 'Sales Assistant',\n    office: 'San Francisco',\n    age: '59'\n  }, {\n    name: 'Rhona Davidson',\n    position: 'Integration Specialist',\n    office: 'Tokyo',\n    age: '55'\n  }, {\n    name: 'Colleen Hurst',\n    position: 'Javascript Developer',\n    office: 'San Francisco',\n    age: '39'\n  }]; // [{frequency: 15}, {frequency: 20}, {frequency: 20}, {frequency: 250}, {frequency: 350}, {frequency: 15}, {frequency: 20}, {frequency: 20}, {frequency: 250}, {frequency: 350}, {frequency: 15}, {frequency: 20}, {frequency: 20}, {frequency: 250}, {frequency: 350}, {frequency: 15}, {frequency: 20}, {frequency: 20}, {frequency: 250}, {frequency: 350}, {frequency: 15}, {frequency: 20}, {frequency: 20}, {frequency: 250}, {frequency: 350}, {frequency: 15}, {frequency: 20}, {frequency: 20}, {frequency: 150}, {frequency: 75}, {frequency: 15}, {frequency: 20}, {frequency: 20}, {frequency: 150}, {frequency: 50}]\n\n  function valuetext(value) {\n    setnBin(value);\n  }\n\n  var data1 = {\n    columns: [{\n      label: 'Name',\n      field: 'name',\n      sort: 'asc',\n      width: 150\n    }, {\n      label: 'Position',\n      field: 'position',\n      sort: 'asc',\n      width: 270\n    }, {\n      label: 'Office',\n      field: 'sentence',\n      sort: 'asc',\n      width: 200\n    }, {\n      label: 'Age',\n      field: 'age',\n      sort: 'asc',\n      width: 100\n    }],\n    rows: values\n  }; //idk how to turn data into a list of just ages for the histogram :(\n  //   const ageList = data.map(ages => {\n  //   return (\n  //   <p>{ages.age}</p>\n  //   )\n  // });\n  //   console.log(data.getElementById('age'))\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"file\",\n    onChange: changeHandler,\n    accept: \".csv\",\n    style: {\n      display: \"block\",\n      margin: \"10px auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }), \"console.log(values);\", /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, tableRows.map(function (rows, index) {\n    return /*#__PURE__*/React.createElement(\"th\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 22\n      }\n    }, rows);\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, values.map(function (value, index) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 15\n      }\n    }, value.map(function (val, i) {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: i,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 26\n        }\n      }, val);\n    }));\n  }))), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }, \"Clinical Trials Dashboard\"), /*#__PURE__*/React.createElement(DatatablePage, {\n    data: data1,\n    nbins: nBin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      marginTop: 43,\n      marginRight: -30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }, \"Number of Bins\"), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      width: 300,\n      margin: 5,\n      marginBottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    \"aria-label\": \"Number of Bins\",\n    defaultValue: 10,\n    getAriaValueText: valuetext,\n    valueLabelDisplay: \"on\",\n    step: 1,\n    marks: true,\n    min: 1,\n    max: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Histogram, {\n    data: data,\n    nBin: nBin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Histogram, {\n    data: data,\n    nBin: nBin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Histogram, {\n    data: data,\n    nBin: nBin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/naomikenyatta/abstracts-vis/src/App.js"],"names":["React","useState","Histogram","Box","Slider","Test","DatatablePage","Papa","App","parsedData","setParsedData","tableRows","setTableRows","values","setValues","changeHandler","event","parse","target","files","header","skipEmptyLines","complete","results","rowsArray","valuesArray","data","map","d","push","Object","keys","nBin","setnBin","name","position","office","age","valuetext","value","data1","columns","label","field","sort","width","rows","display","margin","index","val","i","justifyContent","marginTop","marginRight","marginBottom"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\nimport Histogram from './components/histogram';\nimport Box from '@mui/material/Box';\nimport Slider from '@mui/material/Slider';\nimport Test from './components/test';\nimport DatatablePage from './components/table';\nimport Papa from \"papaparse\";\n\nfunction App() {\n\n  // State to store parsed data\n  const [parsedData, setParsedData] = useState([]);\n\n  //State to store table Column name\n  const [tableRows, setTableRows] = useState([]);\n\n  //State to store the values\n  const [values, setValues] = useState([]);\n\n  const changeHandler = (event) => {\n    // Passing file data (event.target.files[0]) to parse using Papa.parse\n    Papa.parse(event.target.files[0], {\n      header: true,\n      skipEmptyLines: true,\n      complete: function (results) {\n        const rowsArray = [];\n        const valuesArray = [];\n\n        // Iterating data to get column name and their values\n        results.data.map((d) => {\n          rowsArray.push(Object.keys(d));\n          valuesArray.push(Object.values(d));\n        });\n\n        // Parsed Data Response in array format\n        setParsedData(results.data);\n\n        // Filtered Column Names\n        setTableRows(rowsArray[0]);\n\n        // Filtered Values\n        setValues(valuesArray);\n      },\n    });\n  };\n\n  const [nBin, setnBin] = useState(30)\n  const data = [{\n    name: 'Tiger Nixon',\n    position: 'System Architect',\n    office: 'Edinburgh',\n    age: '61'\n  },\n  {\n    name: 'Garrett Winters',\n    position: 'Accountant',\n    office: 'Tokyo',\n    age: '63'\n  },\n  {\n    name: 'Ashton Cox',\n    position: 'Junior Technical Author',\n    office: 'San Francisco',\n    age: '66'\n  },\n  {\n    name: 'Cedric Kelly',\n    position: 'Senior Javascript Developer',\n    office: 'Edinburgh',\n    age: '22'\n  },\n  {\n    name: 'Airi Satou',\n    position: 'Accountant',\n    office: 'Tokyo',\n    age: '33'\n  },\n  {\n    name: 'Brielle Williamson',\n    position: 'Integration Specialist',\n    office: 'New York',\n    age: '61'\n  },\n  {\n    name: 'Herrod Chandler',\n    position: 'Sales Assistant',\n    office: 'San Francisco',\n    age: '59'\n  },\n  {\n    name: 'Rhona Davidson',\n    position: 'Integration Specialist',\n    office: 'Tokyo',\n    age: '55'\n  },\n  {\n    name: 'Colleen Hurst',\n    position: 'Javascript Developer',\n    office: 'San Francisco',\n    age: '39'\n  }]\n  // [{frequency: 15}, {frequency: 20}, {frequency: 20}, {frequency: 250}, {frequency: 350}, {frequency: 15}, {frequency: 20}, {frequency: 20}, {frequency: 250}, {frequency: 350}, {frequency: 15}, {frequency: 20}, {frequency: 20}, {frequency: 250}, {frequency: 350}, {frequency: 15}, {frequency: 20}, {frequency: 20}, {frequency: 250}, {frequency: 350}, {frequency: 15}, {frequency: 20}, {frequency: 20}, {frequency: 250}, {frequency: 350}, {frequency: 15}, {frequency: 20}, {frequency: 20}, {frequency: 150}, {frequency: 75}, {frequency: 15}, {frequency: 20}, {frequency: 20}, {frequency: 150}, {frequency: 50}]\n  function valuetext(value) {\n    setnBin(value)\n  }\n  const data1 = {\n    columns: [\n      {\n        label: 'Name',\n        field: 'name',\n        sort: 'asc',\n        width: 150\n      },\n      {\n        label: 'Position',\n        field: 'position',\n        sort: 'asc',\n        width: 270\n      },\n      {\n        label: 'Office',\n        field: 'sentence',\n        sort: 'asc',\n        width: 200\n      },\n      {\n        label: 'Age',\n        field: 'age',\n        sort: 'asc',\n        width: 100\n      }\n    ],\n    rows: values\n  };\n\n\n  //idk how to turn data into a list of just ages for the histogram :(\n\n//   const ageList = data.map(ages => {\n//   return (\n//   <p>{ages.age}</p>\n//   )\n// });\n//   console.log(data.getElementById('age'))\n\n  return (\n    <div>\n      <input\n        type=\"file\"\n        name=\"file\"\n        onChange={changeHandler}\n        accept=\".csv\"\n        style={{ display: \"block\", margin: \"10px auto\" }}\n      />\n      <br />\n      <br />\n      console.log(values);\n      <table>\n        <thead>\n          <tr>\n            {tableRows.map((rows, index) => {\n              return <th key={index}>{rows}</th>;\n            })}\n          </tr>\n        </thead>\n        <tbody>\n          {values.map((value, index) => {\n            return (\n              <tr key={index}>\n                {value.map((val, i) => {\n                  return <td key={i}>{val}</td>;\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n\n      <h1>Clinical Trials Dashboard</h1>\n      <DatatablePage data = {data1} nbins = {nBin}/>\n\n\n      <div style={{display: \"flex\", justifyContent: \"center\"}}>\n        <p style={{marginTop: 43, marginRight: -30}}>Number of Bins</p>\n\n\n        <Box sx={{ width: 300, margin: 5, marginBottom: 0 }}>\n          <Slider\n            aria-label=\"Number of Bins\"\n            defaultValue={10}\n            getAriaValueText={valuetext}\n            valueLabelDisplay=\"on\"\n            step={1}\n            marks\n            min={1}\n            max={20}\n          />\n        </Box>\n\n      </div>\n\n      <div style={{display: \"flex\", justifyContent: \"center\"}}>\n        <Histogram data={data} nBin={nBin}/>\n        <Histogram data={data} nBin={nBin}/>\n        <Histogram data={data} nBin={nBin}/>\n      </div>\n    </div>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}