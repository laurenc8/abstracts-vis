{"ast":null,"code":"import _slicedToArray from \"/Users/naomikenyatta/abstracts-vis/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/naomikenyatta/abstracts-vis/src/App.js\";\nimport './App.css';\nimport React, { useState } from 'react';\nimport Histogram from './components/histogram';\nimport Box from '@mui/material/Box';\nimport Slider from '@mui/material/Slider';\nimport Test from './components/test';\nimport DatatablePage from './components/table';\nimport Papa from \"papaparse\";\nimport { Layout } from 'antd';\n\nfunction App() {\n  // State to store parsed data\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      parsedData = _useState2[0],\n      setParsedData = _useState2[1]; //State to store table Column name\n\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tableRows = _useState4[0],\n      setTableRows = _useState4[1]; //State to store the values\n\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      values = _useState6[0],\n      setValues = _useState6[1];\n\n  var changeHandler = function changeHandler(event) {\n    // Passing file data (event.target.files[0]) to parse using Papa.parse\n    Papa.parse(event.target.files[0], {\n      header: true,\n      skipEmptyLines: true,\n      complete: function complete(results) {\n        var rowsArray = [];\n        var valuesArray = []; // Iterating data to get column name and their values\n\n        results.data.map(function (d) {\n          rowsArray.push(Object.keys(d));\n          valuesArray.push(Object.values(d));\n        }); // Parsed Data Response in array format\n\n        setParsedData(results.data); // Filtered Column Names\n\n        setTableRows(rowsArray[0]); // Filtered Values\n\n        setValues(valuesArray);\n      }\n    });\n  };\n\n  var _useState7 = useState(30),\n      _useState8 = _slicedToArray(_useState7, 2),\n      nBin = _useState8[0],\n      setnBin = _useState8[1];\n\n  function valuetext(value) {\n    setnBin(value);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, \"Clinical Trials Dashboard\"), /*#__PURE__*/React.createElement(Layout, {\n    style: {\n      height: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"file\",\n    onChange: changeHandler,\n    accept: \".csv\",\n    style: {\n      display: \"block\",\n      margin: \"10px auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Layout, {\n    style: {\n      height: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      marginTop: 43,\n      marginRight: -30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Number of Bins\"), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      width: 300,\n      margin: 5,\n      marginBottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    \"aria-label\": \"Number of Bins\",\n    defaultValue: 10,\n    getAriaValueText: valuetext,\n    valueLabelDisplay: \"on\",\n    step: 1,\n    marks: true,\n    min: 1,\n    max: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Histogram, {\n    data: values,\n    nBin: nBin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(Layout, {\n    style: {\n      height: 920\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DatatablePage, {\n    tableRows: tableRows,\n    values: values,\n    nbins: nBin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/naomikenyatta/abstracts-vis/src/App.js"],"names":["React","useState","Histogram","Box","Slider","Test","DatatablePage","Papa","Layout","App","parsedData","setParsedData","tableRows","setTableRows","values","setValues","changeHandler","event","parse","target","files","header","skipEmptyLines","complete","results","rowsArray","valuesArray","data","map","d","push","Object","keys","nBin","setnBin","valuetext","value","height","display","margin","justifyContent","marginTop","marginRight","width","marginBottom"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\nimport Histogram from './components/histogram';\nimport Box from '@mui/material/Box';\nimport Slider from '@mui/material/Slider';\nimport Test from './components/test';\nimport DatatablePage from './components/table';\nimport Papa from \"papaparse\";\nimport { Layout } from 'antd';\n\nfunction App() {\n\n  // State to store parsed data\n  const [parsedData, setParsedData] = useState([]);\n\n  //State to store table Column name\n  const [tableRows, setTableRows] = useState([]);\n\n  //State to store the values\n  const [values, setValues] = useState([]);\n\n  const changeHandler = (event) => {\n    // Passing file data (event.target.files[0]) to parse using Papa.parse\n    Papa.parse(event.target.files[0], {\n      header: true,\n      skipEmptyLines: true,\n      complete: function (results) {\n        const rowsArray = [];\n        const valuesArray = [];\n\n        // Iterating data to get column name and their values\n        results.data.map((d) => {\n          rowsArray.push(Object.keys(d));\n          valuesArray.push(Object.values(d));\n        });\n\n        // Parsed Data Response in array format\n        setParsedData(results.data);\n\n        // Filtered Column Names\n        setTableRows(rowsArray[0]);\n\n        // Filtered Values\n        setValues(valuesArray);\n      },\n    });\n  };\n\n  const [nBin, setnBin] = useState(30)\n\n  function valuetext(value) {\n    setnBin(value)\n  }\n\n  return (\n    <div>\n    <h1>Clinical Trials Dashboard</h1>\n    <Layout style={{ height: 30 }}>\n      <input\n        type=\"file\"\n        name=\"file\"\n        onChange={changeHandler}\n        accept=\".csv\"\n        style={{ display: \"block\", margin: \"10px auto\" }}\n      />\n      <br />\n      <br />\n\n</Layout>\n      <Layout style={{ height: 500 }}>\n\n      <div style={{display: \"flex\", justifyContent: \"center\"}}>\n        <p style={{marginTop: 43, marginRight: -30}}>Number of Bins</p>\n\n        <Box sx={{ width: 300, margin: 5, marginBottom: 0 }}>\n          <Slider\n            aria-label=\"Number of Bins\"\n            defaultValue={10}\n            getAriaValueText={valuetext}\n            valueLabelDisplay=\"on\"\n            step={1}\n            marks\n            min={1}\n            max={20}\n          />\n        </Box>\n\n      </div>\n\n      <div style={{display: \"flex\", justifyContent: \"center\"}}>\n        <Histogram data={values} nBin={nBin}/>\n      </div>\n\n    </Layout>\n\n    <Layout style={{ height: 920 }}>\n    <DatatablePage tableRows={tableRows} values={values} nbins={nBin}/>\n    </Layout>\n\n    </div>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}